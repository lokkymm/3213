import tkinter as tk

# Initialize account database and account count
accounts = {}
account_count = 0
invite_codes = ["secretcode123", "anothercode456"]  # Set your invite codes here
used_invite_codes = []  # Track used invite codes
dev_username = "fauware"
dev_password = "fauware"

def login():
    username = entry_username.get()
    password = entry_password.get()
    
    if username in accounts and accounts[username]["password"] == password:
        uid = accounts[username]["uid"]
        label_result.config(text=f"Login Successful! UID: {uid}", fg="green")
        if username == dev_username and password == dev_password:
            button_gen_codes.pack()
    else:
        label_result.config(text="Incorrect Username or Password", fg="red")

def register():
    global account_count
    new_username = entry_new_username.get()
    new_password = entry_new_password.get()
    entered_code = entry_invite_code.get()
    
    if new_username in accounts:
        label_register_result.config(text="Username already exists. Choose a different username.", fg="red")
    elif entered_code in used_invite_codes:
        label_register_result.config("Invite code already used. Enter a new code.", fg="red")
    elif entered_code not in invite_codes:
        label_register_result.config(text="Invalid invite code. Please enter a valid code.", fg="red")
    else:
        account_count += 1
        accounts[new_username] = {"password": new_password, "uid": account_count}
        label_register_result.config(text=f"Account created successfully for {new_username} with UID: {account_count}", fg="green")
        used_invite_codes.append(entered_code)

def generate_codes():
    # Generate codes and make them active in the main login register system
    # Example code generation logic
    for i in range(5):
        accounts[f"code{i+1}"] = {"password": f"pass{i+1}", "uid": account_count+i+1}

# Create the main window
root = tk.Tk()
root.title("Login and Register Page")
root.geometry("300x400")
root.configure(bg="gray10")

# Login Section
label_title = tk.Label(root, text="Login", font=("Helvetica", 16), bg="gray10", fg="white")
label_title.pack(pady=10)

label_username = tk.Label(root, text="Username:", bg="gray10", fg="white")
label_username.pack()
entry_username = tk.Entry(root)
entry_username.pack()

label_password = tk.Label(root, text="Password:", bg="gray10", fg="white")
label_password.pack()
entry_password = tk.Entry(root, show="*")
entry_password.pack()

button_login = tk.Button(root, text="Login", command=login, bg="darkgreen", fg="white")
button_login.pack(pady=10)

label_result = tk.Label(root, text="", bg="gray10", fg="white")
label_result.pack()

# Registration Section
label_register_title = tk.Label(root, text="Register", font=("Helvetica", 16), bg="gray10", fg="white")
label_register_title.pack(pady=10)

label_new_username = tk.Label(root, text="New Username:", bg="gray10", fg="white")
label_new_username.pack()
entry_new_username = tk.Entry(root)
entry_new_username.pack()

label_new_password = tk.Label(root, text="New Password:", bg="gray10", fg="white")
label_new_password.pack()
entry_new_password = tk.Entry(root, show="*")
entry_new_password.pack()

label_invite_code = tk.Label(root
